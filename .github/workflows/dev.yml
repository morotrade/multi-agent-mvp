name: AI Developer

on:
  issues:
    types: [labeled]          # ← solo quando si AGGIUNGE una label all'issue
  pull_request:
    types: [labeled]          # ← solo quando si AGGIUNGE una label al PR
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        required: true
        default: issue
        options: [issue, need-fix]
      number:
        type: number
        required: true
        description: "Issue/PR number"

concurrency:
  group: dev-${{ github.event.issue.number || github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  run-dev:
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'issues' && 
       github.event.action == 'labeled' && 
       github.event.label.name == 'bot:implement') ||
      (github.event_name == 'pull_request' && 
       github.event.action == 'labeled' && 
       (github.event.label.name == 'need-fix' || github.event.label.name == 'ai-fix'))
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: .github/agents/requirements.txt

      - name: Install Python deps
        run: |
          set -e
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then 
            pip install -r requirements.txt
          fi
          if [ -f .github/agents/requirements.txt ]; then 
            pip install -r .github/agents/requirements.txt
          else
            pip install httpx openai anthropic google-generativeai
          fi

      # Niente più "Decide mode": usiamo direttamente le espressioni di GitHub
      - name: Run dev agent
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_CLASSIC_TOKEN: ${{ secrets.GH_CLASSIC_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          DEVELOPER_MODEL: gpt-4o-mini
          REFACE_STRATEGY: full
          PROJECT_ROOT: ${{ vars.DEV_PROJECT_ROOT }}
          # Imposta automaticamente in base all'evento:
          ISSUE_NUMBER: ${{ github.event_name == 'issues' && github.event.issue.number || (inputs.mode == 'issue' && inputs.number || '') }}
          PR_NUMBER:    ${{ github.event_name == 'pull_request' && github.event.pull_request.number || (inputs.mode == 'need-fix' && inputs.number || '') }}
        run: python .github/agents/dev.py