name: AI Progressor

on:
  pull_request:
    types: [labeled]
  workflow_dispatch: {}

concurrency:
  group: progress-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  progress:
    # Esegui su APPROVED, su PR merged, su label 'ready-to-merge', o manuale.
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && 
       github.event.action == 'labeled' && 
       github.event.label.name == 'ready-to-merge')
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      pull-requests: write
      issues: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then 
            pip install -r requirements.txt
          fi
          if [ -f .github/agents/requirements.txt ]; then 
            pip install -r .github/agents/requirements.txt
          else
            pip install httpx openai anthropic google-generativeai
          fi

      - name: Run progressor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_CLASSIC_TOKEN: ${{ secrets.GH_CLASSIC_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          # Auto-merge abilitato su review APPROVED oppure su label 'ready-to-merge'
          AUTO_MERGE_PR: ${{ (github.event_name == 'pull_request_review' && github.event.review.state == 'approved') ||
                              (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'ready-to-merge')) }}
          AUTO_MERGE_METHOD: squash
          GH_PROJECT_ID: ${{ secrets.GH_PROJECT_ID }}
          GITHUB_PROJECT_ID: ${{ secrets.GH_PROJECT_ID }}
          PROJECT_STATUS_FIELD_ID: ${{ secrets.PROJECT_STATUS_FIELD_ID }}
          PROJECT_STATUS_BACKLOG_ID: ${{ secrets.PROJECT_STATUS_BACKLOG_ID }}
          PROJECT_STATUS_INPROGRESS_ID: ${{ secrets.PROJECT_STATUS_INPROGRESS_ID }}
          PROJECT_STATUS_INREVIEW_ID: ${{ secrets.PROJECT_STATUS_INREVIEW_ID }}
          PROJECT_STATUS_DONE_ID: ${{ secrets.PROJECT_STATUS_DONE_ID }}
        run: python .github/agents/progress.py
